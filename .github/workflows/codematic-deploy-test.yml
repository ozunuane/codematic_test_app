name: Build and Deploy to GKE

on:
  pull_request:
    types:
      - closed
    branches:
      - develop

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_DEMO }}   # Add your cluster name here.
  GKE_ZONE: ${{ secrets.GKE_ZONE }}   # Add your cluster zone here.
  DEPLOYMENT_NAME: afl-service-codematic # Add your deployment name here.
  IMAGE: ozunuane/service-codematic
  IMAGE_TAG: $GITHUB_SHA
  CONTEXT: ${{ secrets.GKE_CONTEXT }}
  GKE_SA: ${{ secrets.GKE_SA }}
  
jobs:

  setup-build-publish-deploy:
    if: github.event.pull_request.merged == true
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA }}
        project_id: ${{ secrets.GKE_PROJECT }}
      
    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}  
        credentials: ${{ secrets.GKE_SA }}



    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        cd dev-deploy
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize


        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        cd dev-deploy
        kubectl config set-context $CONTEXT
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        kubectl apply -k .
        kubectl rollout status deployment/${{env.DEPLOYMENT_NAME}} --namespace codematic
        kubectl get services -o wide
    


    # - name: Notify Slack 
    #   uses: ravsamhq/notify-slack-action@v1
    #   if: always()
    #   with:
    #     status: ${{ job.status }}
    #     notification_title: '{workflow} has {status_message}'
    #     message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
    #     footer: 'Linked Repo <{repo_url}|{repo}>'
    #     notify_when: 'failure'
    #     mention_users: 'U037VP3HLUX'
    #     mention_users_when: 'failure,warnings'
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
